*** Settings ***

Library         OperatingSystem
Resource        common_resource.txt
Test Setup      Test Case Setup
Test Teardown   Test Case Teardown

*** Keywords ***

Test Case Setup
    Remove Directory  ${WORKSPACE}  recursive
    Create Directory  ${WORKSPACE}
    Set Selenium Timeout  25
    Open Browser  ${MAIN_PAGE}  ${BROWSER}
    Title Should Be  Dippa editor

Test Case Teardown
    Close Browser

Go To Main Page
    Go To  ${MAIN_PAGE}
    Title Should Be  Dippa editor

Create New Demo
    Click Button  demo_button
    Sleep  2s
    ${DEMO_URL} =  Execute Javascript  window.document.location
    [Return]  ${DEMO_URL}

Insert  [ARGUMENTS]  ${TEXT}
    Execute Javascript  window.require('app/controller/editor').instance.editor.insert("${TEXT}");

Set Text To Editor  [ARGUMENTS]  ${TEXT}
    Execute Javascript  window.require('app/controller/editor').instance.setValue(${TEXT});

Add Line To Editor  [ARGUMENTS]  ${LINE}  ${TEXT}
    Set Cursor To Line  ${LINE}
    Insert  ${TEXT}

Get Text From Editor
    ${EDITOR_VALUE} =  Execute Javascript  window.require('app/controller/editor').instance.getValue();
    [Return]  ${EDITOR_VALUE}

Wait For Saved
    Wait For Condition  window.$('#save_button').text() === 'Saved!'

Save
    Save Without Waiting
    Wait For Saved

Save Without Waiting
    Click Button  save_button  don't wait

Preview
    ${PREVIEW_URL} =  Get Preview URL
    Go To  ${PREVIEW_URL}

Get Preview URL
    ${PREVIEW_ID} =  Execute Javascript  window.require('app/session').previewId;
    ${PREVIEW_URL}  Set Variable  ${MAIN_PAGE}preview/${PREVIEW_ID}
    Set Suite Variable  ${PREVIEW_URL}
    [Return]  ${PREVIEW_URL}

Editor Value Should Equal  [ARGUMENTS]  ${TEXT}
    ${EDITOR_VALUE} =  Get Text From Editor
    Should Be Equal As Strings  ${EDITOR_VALUE}  ${TEXT}

Editor Value Should Contain  [ARGUMENTS]  ${TEXT}
    ${EDITOR_VALUE} =  Get Text From Editor
    Should Contain  ${EDITOR_VALUE}  ${TEXT}

Create Github Repository
    ${REPO_NAME} =  Execute Javascript  'dippa_' + (new Date()).getTime()
    Run  grunt create-repository:${REPO_NAME}:${GITHUB_USERNAME}:${GITHUB_PASSWORD}
    ${REPO_URL}  Set Variable  https://github.com/rap1ds-testing/${REPO_NAME}
    [Return]  ${REPO_URL}

Wait For Element Visible  [Arguments]  ${ID}
    Wait For Condition  window.$('#${ID}').is(':visible')

Click Link And Wait Element Visible  [Arguments]  ${BUTTON}  ${WAIT_ELEMENT}
    Click Link  ${BUTTON}  don't wait
    Wait For Element Visible  ${WAIT_ELEMENT}

Click Create New Dippa
    Click Link And Wait Element Visible  create_dippa  step1_done

Click Step One Done
    Click Link And Wait Element Visible  step1_done  step2_done

Click Step Two Done
    Click Link And Wait Element Visible  step2_done  step3_done

Click Step Three Done
    Click Link And Wait Element Visible  step3_done  step4_done

Click Step Four Done
    Click Link  step4_done

Type Github Repository URL  [Arguments]  ${REPO_URL}
    Input Text  repository_url  ${REPO_URL}

Get Dippa Id
    ${ID} =  Execute Javascript  window.location.pathname.split('/')[1]
    [Return]  ${ID}

Download File  [Arguments]  ${URL}
    Run  wget -O ${WORKSPACE}/wget_download ${URL}
    [Return]  ${WORKSPACE}/wget_download

Get PDF Text Content  [Arguments]  ${PDF_FILE}
    Run  pdftotext -enc UTF-8 ${PDF_FILE} ${WORKSPACE}/pdftotext_output.txt
    ${TEXT_CONTENT}  Get File  ${WORKSPACE}/pdftotext_output.txt
    [Return]  ${TEXT_CONTENT}

Get Fixture File  [Arguments]  ${FILE}
    ${FIXTURE_FILE}  Set Variable  ${FIXTURES}/${FILE}
    ${FILE_CONTENT}  Get File  ${FIXTURE_FILE}
    [Return]  ${FILE_CONTENT}

Download Preview PDF File
    ${DOWNLOADED_FILE}  Download File  ${PREVIEW_URL}
    [Return]  ${DOWNLOADED_FILE}

Should PDF Contain  [Arguments]  ${PDF_FILE}  ${EXPECTED_TEXT}
    ${PDF_TEXT}  Get PDF Text Content  ${PDF_FILE}
    Should Contain  ${PDF_TEXT}  ${EXPECTED_TEXT}

Should Save Button Be Enabled
    Wait For Condition  !(window.$('#save_button').attr('disabled'))

Should Save Button Be Disabled
    Wait For Condition  !!(window.$('#save_button').attr('disabled'))

Should Page Be Reloadable
    Reload Page
    Sleep  2s

Go To Demo
    Go To  ${DEMO_URL}

Open Demo
    ${DEMO_URL} =  Create New Demo
    Set Suite Variable  ${DEMO_URL}

Create Dippa
    Go To Main Page
    ${REPO_URL}  Create Github Repository
    Set Suite Variable  ${REPO_URL}
    Sleep  1s
    Click Create New Dippa
    Click Step One Done
    Type Github Repository URL  ${REPO_URL}
    Click Step Two Done
    Click Step Three Done
    Click Step Four Done

Set Fixture Text To Editor
    ${SAMPLE_JS_CONTENT} =  Get Fixture File  sample_dippa_content.js.tex
    Set Text To Editor  ${SAMPLE_JS_CONTENT}

Save Dippa
    Sleep  1s
    Set Fixture Text To Editor
    Save
    Reload Page
    Sleep  2s
    Editor Value Should Contain  Lorem ipsum dolor sit amet, consectetur adipiscing elit.

Should Be Compiling
    Page Should Contain  Compiling PDF

Should Not Be Compiling
    Page Should Not Contain  Compiling PDF

Should Show Compile Error
    Page Should Contain Seems that an error happened during the PDF generation

PDF Preview

    # --- First time compile --- #
    Set Fixture Text To Editor
    Add Line To Editor  38  Testing PDF Preview
    Save Without Waiting
    Preview
    Should Be Compiling
    Sleep  5s
    Should Not Be Compiling
    Log Variables
    ${PDF_FILE}  Download Preview PDF File
    Should PDF Contain  ${PDF_FILE}  Testing PDF Preview

    # --- Second time preview, no need to compile --- #
    Go To Demo
    Preview
    Should Not Be Compiling

    # --- Error --- #
    Go To Demo
    Set Text To Editor  "Jee Jee"
    Save Without Waiting
    Preview
    Should Be Compiling
    Sleep  5s
    Should Not Be Compiling
    Should Show Compile Error

Save To Github
    Sleep  5s
    Run  git clone ${REPO_URL} ${WORKSPACE}/github_repository
    ${DIPPA_TEX}  Get File  ${WORKSPACE}/github_repository/dippa.tex
    Should Contain  ${DIPPA_TEX}  Lorem ipsum dolor sit amet, consectetur adipiscing elit.

Change To Document Tab
    Click Element  tab_doc  don't wait
    Sleep  1s

Change To References Tab
    Click Element  tab_ref  don't wait
    Sleep  1s

Test Save Enable
    Should Save Button Be Disabled
    Set Text To Editor  "Jee Jee"
    Should Save Button Be Enabled
    Save Without Waiting
    Should Save Button Be Disabled
    Set Text To Editor  "Jee Jee Jee"
    Should Save Button Be Disabled
    Wait For Saved
    Should Save Button Be Enabled
    Save
    Should Save Button Be Disabled
    Change To References Tab
    Should Save Button Be Disabled
    Should Page Be Reloadable
    Should Save Button Be Disabled
    Set Fixture Text To Editor
    Save

Should Cursor Be In Line  [Arguments]  ${LINE_NUMBER}
    ${CURRENT_CURSOR_POSITION} =  Get Cursor Position
    Should Be Equal As Integers  ${CURRENT_CURSOR_POSITION}  ${LINE_NUMBER}

Set Cursor To Line  [Arguments]  ${LINE_NUMBER}
    Execute Javascript  window.require('app/controller/editor').instance.setCursorPosition({column: 0, row: ${LINE_NUMBER}});
    Should Cursor Be In Line  ${LINE_NUMBER}

Get Cursor Position
    ${POSITION} =  Execute Javascript  window.require('app/controller/editor').instance.getCursorPosition().row;
    [Return]  ${POSITION}

Test Cursor Position
    Change To Document Tab
    Set Cursor To Line  12
    Change To References Tab
    # The references content is currently empty
    # Set Cursor To Line  3
    Change To Document Tab
    Should Cursor Be In Line  12
    # Change To References Tab
    # Should Cursor Be In Line  3

*** Test Cases ***

Test Demo  [Tags]  demo
    Open Demo
    Save Dippa
    PDF Preview
    Test Save Enable
    Test Cursor Position

Test Github  [Tags]  github
    Create Dippa
    Save Dippa
    PDF Preview
    Save To Github
    Test Save Enable
    Test Cursor Position